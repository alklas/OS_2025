Работа с пайпом. Часть 1.
	Объявление массива из двух целых значений для хранения файловых дескрипторов, ассоциированных с пайпом:
        int fd[2]

        Создание пайпа (для связи между родственными процессами)
        pipe(fd)
	После выполнения pipe(fd) в массив записываются значения (новые для каждого нового пайпа)

	Запись в пайп байтовой строки:
        size = write(fd[1], string, 20)

	Чтение из пайпа байтовой строки
        size = read(fd[0], resstring, 20)
	При чтении информации из пайпа прочитанные байты исчезают из канала связи
	
	Закрытие выходного потока (открытого ранее на запись)
        close(fd[1])

	Закрытие входного потока (открытого ранее на чтение)
        close(fd[0])

Для демонстрации взаимодействия между родственными процессами используется программа pr009m.c
Работа программы:

alexander@alexandr-Aspire-Z5751:~/OS_2025$ ./pr009m.out
Родительский процесс завершил работу
Сообщение от родителя: Информация для дочернего процесса от процесса-родителя

Часть 2
Двунаправленная связь между родственными процессами

Для организации двунаправленной связи проще всего использовать два отдельных канала - pipe1 для передачи данных от родителя к ребёнку и pipe2 для передачи данных от ребёнка к родителю

pipe1 доступен через массив файловых дескрипторов fd1, а pipe2 - через fd2

Пример выполнения программы:
Строка для дочернего процесса записана в пайп1
Родительский процесс читает информацию из pipe2 ...
Процесс-ребёнок начинает чтение строки из пайп1 ...
Сообщение от родителя: Информация для дочернего процесса от процесса-родителя
Процесс-ребёнок начинает запись строки в пайп2 ...
Строка записана процессом-ребёнком в пайп2
Процесс-ребёнок завершил работу
Сообщение от ребёнка: Информация для родительского процесса от ребёнка
Родительский процесс завершил работу 

Сначала работает процесс-родитель, который записывает информацию в пайп1 для процесса-ребёнка
Затем родитель пытается прочитать информацию от дочернего процесса, но в пайп2 информации ещё нет, поэтому родитель блокируется до того момента, пока в канале не появится информация
Процесс-ребёнок читает строку из пайп1, записывает информацию в пайп2 и завершает свою работу.
Процесс родитель переключается из состояния ожидания в состояние "готовность", затем - в состояние "выполнение" и читает строку из пайп2, после чего завершает работу.
