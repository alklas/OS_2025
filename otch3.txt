Процессы в linux

Идентификация процессов:
Каждый процесс в ОС имеет свой идентификатор
Получить идентификатор процесса можно при помощи системного вызова getpid()
Получить идентификатор родительского процесса можно при помощи системного вызова getppid()
Программа, выводящая на экран идентификаторы текущего и родительского процессов:

alexander@alexandr-Aspire-Z5751:~/OS_2025$ vim pr003.c

#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
int main() {
        pid_t procid, parentprocid;
        procid = getpid();
        parentprocid = getppid();
        printf("Ид. текущего процесса: %d\nИд. родительского процесса: %d\n", procid, parentprocid);
        return 0;
}

alexander@alexandr-Aspire-Z5751:~/OS_2025$ gcc pr003.c -o pr003.out
alexander@alexandr-Aspire-Z5751:~/OS_2025$ vim pr003.c
alexander@alexandr-Aspire-Z5751:~/OS_2025$ alexander@alexandr-Aspire-Z5751:~/OS_2025$ ./pr003.out
Ид. текущего процесса: 9065
Ид. родительского процесса: 8107

При первом запуске программы видим id текущего процесса 9065, id родительского процесса - это id командной оболочки bash
alexander@alexandr-Aspire-Z5751:~/OS_2025$ ./pr003.out
Ид. текущего процесса: 9133
Ид. родительского процесса: 8107

При втором запуске программы id текущего процесса поменял своё значение, так как аналогичные предыдущие процессы завершились, а новый процесс получил новое значение id - 9133
id родительского процесса не изменилось, так как для запуска запуска программы по-прежнему использовалась командная оболочка bash.
alexander@alexandr-Aspire-Z5751:~/OS_2025$ ps
    PID TTY          TIME CMD
   8107 pts/4    00:00:00 bash
   9148 pts/4    00:00:00 ps
